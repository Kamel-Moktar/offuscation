-target 1.8 ##Specify the java version number
-dontshrink ##Default is enabled, here the shrink is turned off, that is, the unused classes/members are not deleted.
-dontoptimize ##Default is enabled, here to turn off bytecode level optimization
-useuniqueclassmembernames ## Take a unique strategy for confusing the naming of class members
-adaptclassstrings ## After confusing the class name, replace it with a place like Class.forName('className')
-dontnote
-ignorewarnings
-dontwarn
#/*****/
-keepdirectories
-adaptclassstrings
-dontusemixedcaseclassnames
-flattenpackagehierarchy 'ma.abc'
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod

#-keep public class * extends org.springframework.boot.web.support.SpringBootServletInitializer

-keepdirectories
-keepclasseswithmembers public class * { public static void main(java.lang.String[]);} ##Maintain the class of the main method and its method name
-keepclassmembers enum * { *; }  ##Reserving enumeration members and methods
-keepclassmembers class * {
     @org.springframework.beans.factory.annotation.Autowired *;
     @org.springframework.beans.factory.annotation.Qualifier *;
     @org.springframework.beans.factory.annotation.Value *;
     @org.springframework.beans.factory.annotation.Required *;
     @org.springframework.context.annotation.Bean *;
     @org.springframework.context.annotation.Primary *;
     @org.springframework.boot.context.properties.ConfigurationProperties *;
     @org.springframework.boot.context.properties.EnableConfigurationProperties *;
     @org.springframework.data.jpa.repository.JpaRepository *;
     @org.springframework.data.jpa.repository.Query *;
     @org.springframework.data.rest.core.annotation.RepositoryRestResource *;
     @lombok.NoArgsConstructor *;
     @javax.annotation.PostConstruct *;
     @javax.annotation.PreDestroy *;
     @org.hibernate.dialect.PostgreSQLDialect *;

}
-keep @org.springframework.cache.annotation.EnableCaching class *
-keep @org.springframework.context.annotation.Configuration class *
-keep @org.springframework.boot.context.properties.ConfigurationProperties class *
-keep @org.springframework.boot.autoconfigure.SpringBootApplication class *

-allowaccessmodification
-keepattributes *Annotation*
-keepdirectories com.jayk.springboot.proguard.obfuscationdemo
-keepdirectories org.springframework.boot.autoconfigure

-keepclassmembernames class * {
     java.lang.Class class$(java.lang.String);
     java.lang.Class class$(java.lang.String, boolean);
}
-keepclassmembers enum * {
     public static **[] values();
     public static ** valueOf(java.lang.String);
     public static ** fromValue(java.lang.String);
}
-keepnames class * implements java.io.Serializable
-keepclassmembers class * implements java.io.Serializable {
     static final long serialVersionUID;
     private static final java.io.ObjectStreamField[] serialPersistentFields;
     !static !transient <fields>;
     !private <fields>;
     !private <methods>;
     private void writeObject(java.io.ObjectOutputStream);
     private void readObject(java.io.ObjectInputStream);
     java.lang.Object writeReplace();
     java.lang.Object readResolve();
}
-keepclassmembers class * {
     @org.springframework.beans.factory.annotation.Autowired <fields>;
     @org.springframework.beans.factory.annotation.Autowired <methods>;
     @org.springframework.security.access.prepost.PreAuthorize <methods>;
}

-keepclasseswithmembers,includedescriptorclasses,allowshrinking class * {
    native <methods>;
}
-keep class * extends org.springframework.boot.ApplicationRunner
-keepattributes RuntimeVisibleAnnotations
-keep @javax.persistence.* class * {
   *;
}
-keepclasseswithmembers class * {
 @javax.persistence.Id <fields>;
}

#-keep class ma.pecherie.dao.** {
#    <fields>;
#    <methods>;
#}
#-keepclassmembers class * {
#    *** get*();
#    void set*(***);
#}
#-keep class ma.pecherie.web.** {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.security.user.AppUser {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.security.AppRole {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.customer.Customer {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.product.Product {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.sale.Sale {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.provider.Provider {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.provision.Provision {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.saleproduct.SaleProduct {
#    <fields>;
#    <methods>;
#}
#-keep class ma.pecherie.dao.provisionproduct.ProvisionProduct {
#    <fields>;
#    <methods>;
#}
#
#
#

# Keep - Applications. Keep all application classes, along with their 'main'
# methods.
#-keepclasseswithmembers public class * {
#    public static void main(java.lang.String[]);
#}

# Also keep - Enumerations. Keep the special static methods that are required in
# enumeration classes.
#-keepclassmembers enum  * {
#    public static **[] values();
#    public static ** valueOf(java.lang.String);
#}

# Keep names - Native method names. Keep all native class/method names.
